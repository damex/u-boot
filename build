#!/usr/bin/env bash

: ${uboot_version:=2020.04}
: ${atf_version:=2.3}

[[ ! -n "${platform_name}" ]] && echo "Please define a platform_name." && exit 1

if [[ -f "platforms/${platform_name}" ]] ; then
  source "platforms/${platform_name}"
  if [[ ! -n "${atf_platform}" ]] || [[ ! -n "${uboot_config}" ]] ; then
    echo "Platform configuration is incomplete."
    exit 1
  fi
else
  echo "Platform configuration does no exist."
  exit 1
fi

prepare_atf() {
  curl -L https://github.com/ARM-software/arm-trusted-firmware/archive/v${atf_version}.tar.gz -o atf-${atf_version}.tar.gz
  tar xpf atf-${atf_version}.tar.gz
}

prepare_uboot() {
  curl -L https://github.com/u-boot/u-boot/archive/v${uboot_version}.tar.gz -o u-boot-${uboot_version}.tar.gz
  tar xpf u-boot-${uboot_version}.tar.gz
}

build_atf() {
  pushd "arm-trusted-firmware-${atf_version}"
  make PLAT="${atf_platform}" bl31
  popd
}

build_uboot() {
  pushd "u-boot-${uboot_version}"
  make "${uboot_config}"
  BL31="../arm-trusted-firmware-${atf_version}/${atf_build_binary}" make
  popd
}

prepare_release() {
  mkdir -p "release"
  pushd "release"
  mkdir "${platform_name}-uboot-${uboot_version}-atf-${atf_version}"
  for uboot_build_binary in "${uboot_build_binaries[@]}" ; do
    cp "../u-boot-${uboot_version}/${uboot_build_binary}" "${platform_name}-uboot-${uboot_version}-atf-${atf_version}"
  done
  tar -cJf "${platform_name}-uboot-${uboot_version}-atf-${atf_version}.tar.xz" "${platform_name}-uboot-${uboot_version}-atf-${atf_version}"
  popd
}

[[ -n "${1}" ]] && "${1}"
